

<div class="row">
        <div class="col-md-9 time text-center mt-1 pb-2">
            <button @onclick="e => IncrementDate(-1)" type="button" class="btn next-previous">
                <i class="fas fa-arrow-circle-left fa-lg"></i>
            </button>
            @if (Mode == IndicatorMode.Days)
            {
                <select @bind="CurrentDay" class="btn btn-dark dropdown-toggle" name="days" id="days">
                    @for (int day = 1; day <= DateTime.DaysInMonth(CurrentYear, CurrentMonth); day++)
                    {
                        <option value="@day">@day</option>
                    }
                </select>
            }
            <select @bind="CurrentMonth" class="btn btn-dark dropdown-toggle" name="months" id="months">
                @{int monthValue = 1; }
                @foreach (var item in Enum.GetValues(typeof(Month)))
                {
                    <option value="@monthValue">@item.ToString()</option>
                    monthValue++;
                }
            </select>
            <select @bind="CurrentYear" class="btn btn-dark dropdown-toggle" name="years" id="years">
                @for (int year = _yearRangeStart; year <= _yearRangeEnd; year++)
                {
                    <option value="@year">@year</option>
                }
            </select>
            <button @onclick="e => IncrementDate(1)" type="button" class="btn next-previous">
                <i class="fas fa-arrow-circle-right fa-lg"></i>
            </button>


        </div>
        <div class="col-md-3 time text-center pt-2">
            @{
                string activeClasses = "btn-primary active";
                string inactiveClasses = "btn-default";

            }
            <div class="mode btn-group btn-toggle">
                <button @onclick="e => ChangeMode(IndicatorMode.Months)" class="btn @(Mode == IndicatorMode.Months ? activeClasses : inactiveClasses)">Months</button>
                <button @onclick="e => ChangeMode(IndicatorMode.Days)" class="btn @(Mode == IndicatorMode.Days ? activeClasses : inactiveClasses)">Days</button>
            </div>
        </div>
    </div>

    <div class="row range-slider mt-1 px-3">
        <input class="range-slider__range" type="range" @bind-value="IndicatorValue" @bind-value:event="oninput" min="@MinRange" max="@MaxRange" step="@StepValue" list="ticks">
    </div>

    <div class="row mt-1 text-center">
        <div class="col-md-9">
            <button @onclick="e => Play(-1)" type="button" class="btn control @(IsActive(-1) == true ? "text-success" : "") ">
                <i class="fas fa-backward"></i>
            </button>
            <button @onclick="e => Play(-2)" type="button" class="btn control @(IsActive(-2) == true ? "text-success" : "") ">
                <i class="fas fa-play fa-flip-horizontal"></i>
            </button>
            <button @onclick="e => Stop()" type="button" class="btn control @(_timer != null && _timer.Enabled == false ? "text-success" : "") ">
                <i class="fas fa-pause"></i>
            </button>
            <button @onclick="e => Play(2)" type="button" class="btn control @(IsActive(2) == true ? "text-success" : "") ">
                <i class="fas fa-play"></i>
            </button>
            <button @onclick="e => Play(1)" type="button" class="btn control @(IsActive(1) == true ? "text-success" : "") ">
                <i class="fas fa-forward"></i>
            </button>
        </div>
        <div class="col-md-3">

        </div>
    </div>

<style>
    .btn {
        border-radius: 0;
    }

    .time .next-previous {
        font-size: 25px;
        padding: 0;
        padding-right: 5px;
        padding-left: 5px;
        color: #343a40;
        background-color: transparent;
        border: 0;
        height: 40px;
    }

    .control {
        font-size: 25px;
        color: #343a40;
        background-color: transparent;
        border: 0;
        padding-top: 0;
        padding-bottom: 0;
    }

    .time .mode button:first-of-type {
        border: 1px solid grey;
        border-radius: 10px 0px 0px 10px;
    }

    .time .mode button:last-of-type {
        border: 1px solid grey;
        border-radius: 0px 10px 10px 0px;
    }

    .range-slider {
        margin: 60px 0 0 0%;
    }

    .range-slider {
        width: 100%;
    }

    .range-slider__range {
        -webkit-appearance: none;
        width: calc(100%);
        height: 10px;
        border-radius: 5px;
        background: #d7dcdf;
        outline: none;
        padding: 0;
        margin: 0;
    }

        .range-slider__range::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 5px;
            height: 20px;
            border-radius: 0%;
            background: #2c3e50;
            cursor: pointer;
            -webkit-transition: background .15s ease-in-out;
            transition: background .15s ease-in-out;
        }

            .range-slider__range::-webkit-slider-thumb:hover {
                background: #1abc9c;
            }

        .range-slider__range:active::-webkit-slider-thumb {
            background: #1abc9c;
        }

        .range-slider__range::-moz-range-thumb {
            width: 20px;
            height: 20px;
            border: 0;
            border-radius: 50%;
            background: #2c3e50;
            cursor: pointer;
            -moz-transition: background .15s ease-in-out;
            transition: background .15s ease-in-out;
        }

            .range-slider__range::-moz-range-thumb:hover {
                background: #1abc9c;
            }

        .range-slider__range:active::-moz-range-thumb {
            background: #1abc9c;
        }

        .range-slider__range:focus::-webkit-slider-thumb {
            box-shadow: 0 0 0 3px #fff, 0 0 0 6px #1abc9c;
        }

    .range-slider__value {
        display: inline-block;
        position: relative;
        width: 60px;
        color: #fff;
        line-height: 20px;
        text-align: center;
        border-radius: 3px;
        background: #2c3e50;
        padding: 5px 10px;
        margin-left: 8px;
    }

        .range-slider__value:after {
            position: absolute;
            top: 8px;
            left: -7px;
            width: 0;
            height: 0;
            border-top: 7px solid transparent;
            border-right: 7px solid #2c3e50;
            border-bottom: 7px solid transparent;
            content: '';
        }

    ::-moz-range-track {
        background: #d7dcdf;
        border: 0;
    }

    input::-moz-focus-inner,
    input::-moz-focus-outer {
        border: 0;
    }
</style>